from hub import port
import math
from motor import run_for_degrees
import motor_pair
import motor
from hub import motion_sensor
import time 
# import the sound
from hub import sound
import runloop
from hub import light_matrix
# FLL 2025 SUBMERGED The Falcons Takımı Robotik Yarışması Kodları
# Kodların tamamı Mehmet Sevkan Baş tarafından The Falcons Robotik Takımı için yazılmıştır.

light_matrix.write("MD")
# Değişken Tanımlamaları
wheel_diameter = 5# cm
wheel_circumference = math.pi * wheel_diameter
motor_pair.pair(motor_pair.PAIR_1, port.C, port.D)

# Fonksiyonlar

def move(cm,speed):
    # Mesafeyi tekerlek dönüş açısına (derece) çevirme
  rotations_needed = cm / wheel_circumference
  degrees_needed = rotations_needed * 360
  motor_pair.move_for_degrees(motor_pair.PAIR_1, int(degrees_needed), 0, velocity=speed)

def turn(derece, yon):
    motion_sensor.reset_yaw(0)# Reset yaw değerlerini sıfırla
    hedef = derece*10 if yon == "sag" else -derece*10

    while True:
        yaw = motion_sensor.tilt_angles()[0]# Yaw değerini al
        if (yon == "sag" and yaw >= hedef) or (yon == "sol" and yaw <= hedef):
            break# Hedef açıya ulaşıldıysa döngüden çık

        # Motorları yönlendirme
        if yon == "sag":
            motor_pair.move(motor_pair.PAIR_1, -100)# Sağ dönüş
        elif yon == "sol":
            motor_pair.move(motor_pair.PAIR_1, 100)# Sol dönüş

    motor_pair.stop(motor_pair.PAIR_1)# Motorları durdur

def slow_turn(derece, yon):
    motion_sensor.reset_yaw(0)# Reset yaw değerlerini sıfırla
    hedef = derece*10 if yon == "sag" else -derece*10

    while True:
        yaw = motion_sensor.tilt_angles()[0]# Yaw değerini al
        if (yon == "sag" and yaw >= hedef) or (yon == "sol" and yaw <= hedef):
            break# Hedef açıya ulaşıldıysa döngüden çık

        # Motorları yönlendirme
        if yon == "sag":
            motor_pair.move(motor_pair.PAIR_1, -50)# Sağ dönüş
        elif yon == "sol":
            motor_pair.move(motor_pair.PAIR_1, 50)# Sol dönüş

    motor_pair.stop(motor_pair.PAIR_1)# Motorları durdur

def kol_move_sag(derece,speed):
   motor.run_for_degrees(port.E, derece, speed)

def kol_move_sol(derece,speed):
    motor.run_for_degrees(port.A, derece, speed) 


def toplama():
    
    move(25,-600)
    time.sleep(1.5)
    turn(20,'sag')
    move(10,-400)
    time.sleep(1)
    turn(30,'sol')
    move(15,-500)
    time.sleep(1)
    turn(25,'sag')
    move(10,-400)
    time.sleep(1)
    turn(50,'sol')
    move(10,-300)


toplama()
